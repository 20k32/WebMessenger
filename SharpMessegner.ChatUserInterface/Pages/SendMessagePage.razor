@attribute [Authorize(Roles = "zxvc")]


<div class="input-group">
    <input class="form-control" @bind-value="@Data" @bind-value:event="oninput" placeholder="write message to @RecipientName" @onkeydown="@OnEnterKeyDown"/>
    <button class="btn btn-primary" @onclick="@SendMessageHandleWrapper">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-send-fill" viewBox="-2 -2 20 20">
            <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 
                    4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083l6-15Zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 
                    0-.154-.154l-.338-.215 7.494-7.494 1.178-.471-.47 1.178Z" />
        </svg>
    </button>
</div>

@code 
{
    [Parameter]
    public Func<Message, Task> SendMessageHandler { get; set; } = null!;

    [Parameter]
    public string RecipientName { get; set; } = string.Empty;

    public string SendWhen { get; set; } = DateTime.Now.ToShortTimeString();

    public string Data { get; set; } = string.Empty;

    private async Task SendMessageHandleWrapper()
    {
        if (!string.IsNullOrWhiteSpace(Data))
        {
            await SendMessageHandler.Invoke(new Message(string.Empty, Data, string.Empty, SendWhen, string.Empty));
            Data = string.Empty;
        }
    }

    private async Task OnEnterKeyDown(KeyboardEventArgs e)
    {
        if(e.Code == "Enter")
        {
            await SendMessageHandleWrapper();
        }
    }
}
